#!/usr/bin/env ruby

require 'trollop'

## Example config, copy to ~/.gmy-comp/config.rb
$DB_SOURCE = {
  'host' => '',
  'user' => '',
  'pass' => '',
  'db'   => ''
}

$DB_DEST = {
  'host' => '',
  'user' => '',
  'pass' => '',
  'db'   => ''
}

$PATH_TMP = '/tmp'
###################################################

opts = Trollop::options do
  opt :config_file, "Use specific configuration file", :type => String
  opt :query, "Query to execute", :short => '-e', :type => String, :required => true
end

Trollop::die :config_file, \
  "file must exist" unless File.exist?(opts[:config_file]) if opts[:config_file]

$CONFIG_FILE = File.expand_path('~/.gmy-comp/config.rb')
if File.exists?($CONFIG_FILE) then
  require $CONFIG_FILE
else
  puts 'Warning: no configuration file found'
  exit 2
end

def select(source, db, statement)
  cmd="mysql -u #{source['user']} -p#{source['pass']} -h #{source['host']} #{db} -e '#{statement}'" +
      "| tr '\r' '\n'" +
      "| sed -e 's/\\\\n//g' > #{$PATH_TMP}/#{source['host']}.txt"
  `#{cmd}`
  #TODO: check return codes
end

def diff(lhs, rhs)
  cmd="diff -u #{lhs} #{rhs} |vim -R -"
  system("#{cmd}")
end

def compare(source, dest, query)
  select source, source['db'], query
  select dest, dest['db'], query
  diff "#{$PATH_TMP}/#{$DB_SOURCE['host']}.txt", "#{$PATH_TMP}/#{$DB_DEST['host']}.txt"
end

compare $DB_SOURCE, $DB_DEST, opts[:query]
